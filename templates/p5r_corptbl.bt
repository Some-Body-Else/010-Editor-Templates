//------------------------------------------------
//--- 010 Editor v12.0.1 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------
#include "common/include.h"

typedef struct
{
	
	LittleEndian();
	u16 Field00;
	u16 Field02;
	u16 Field04;
	u16 Field06;
	u32 Field08;
	s32 Field0C[22] <name = "Bitflags">;
	u16 Field_MajorId;
	u8 Field_MinorId;
	u8 Field_SubId;
	u16 NPC_ResourceId;
	s32 Field6A;
	u16 Field6E;
	u32 Field70;
	s32 Field74;
	s16 Field78;
	s16 Field7A;
	u32 P5RNew<hidden=true>;
	f32 Field7C;
	f32 Field80;
	f32 Field84;
	f32 Field88;
	f32 Field8C;
	s32 Field90;
	s32 Field94;
	s32 Field98;
	s32 Field9C;
	f32 FieldA0;
	s32 FieldA4;
	s32 ExtraBitFlag1;
	s32 ExtraBitFlag2;
	s32 FieldB0;
	u32 P5RNew_2;
	BigEndian();
}table <read=table_read, name = "Corp Table Entry">;

typedef struct
{
	SetBackColor( MyRandom( 0xFFFFFFFF ) );
	char corptblname[14] <name = "Entry Name">;
	u8 padding[20];
	u16 segSize <name = "Segment Size">;
	Printf("Segment Size: %d\n", segSize );
	table data[segSize / 188] <optimize=false>;
	s8 extra[segSize % 188];
	Printf("Extra Bytes: %d\n", segSize % 188 );
}main <name = "Corpfile Struct">;

BigEndian();
SetBackColor( MyRandom( 0xFFFFFFFF ) );
int Total_Entries <name = "Total Entries">;
main data[Total_Entries] <optimize=false>;

string table_read( table &o )
{
  local string s;
  SPrintf( s, "FBN ID %05d; Resource ID %05d", o.FBN_NPC_ID, o.Resource_NPC_ID );
  return s;
}